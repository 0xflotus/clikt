#!/usr/bin/env bash
IFS=$'\n\t'

# Completion function for completion-demo
# Generated by Clikt

_complete_myprogram () {
    COMPREPLY=($(compgen -W '--version subcommand' -- "${COMP_WORDS[$COMP_CWORD]}"))
}

_complete_subcommand () {
    COMPREPLY=($(compgen -W '--subopt' -- "${COMP_WORDS[$COMP_CWORD]}"))
}

_complete_top () {
    if [[ "${COMP_WORDS[$COMP_CWORD]}" = -* ]]; then
        COMPREPLY=($(compgen -W '--version' -- "${COMP_WORDS[$COMP_CWORD]}"))
        return
    fi

    COMPREPLY=($(compgen -W 'subcommand' -- "${COMP_WORDS[$COMP_CWORD]}"))


#    for (( i = $COMP_CWORD - 1 ; i >= 1 ; i-- )) ; do
#        #echo "!!!" $"${#COMP_WORDS[@]} - $COMP_CWORD - 1" "${COMP_WORDS[i]}" "!!!"
#        case $COMP_WORDS[i] in
#        subcommand)
#           _complete_subcommand
#           return 0
#           ;;
#        esac
#    done

    _complete_myprogram
}

_complete_myprog () {
    echo
    echo "!1!" $COMP_CWORD "!1!"
    echo "!2!" "${COMP_WORDS[*]}" "!2!"
    echo "!3!" $COMP_LINE  "!3!"
    echo "!4!" "${COMP_WORDS[$COMP_CWORD]}"  "!4!"
    echo "!5!" "${COMP_WORDS[0]}"  "!5!"
    _complete_top
    COMPREPLY=($(compgen -W "now tomorrow never" "${COMP_WORDS[1]}"))
}

complete -F _complete_myprog myprogram.sh

#complete -F _completion_demo completion-demo
